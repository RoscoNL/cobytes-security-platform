const puppeteer = require('puppeteer');

async function testPentestScannersButton() {
  const browser = await puppeteer.launch({
    headless: false,
    defaultViewport: null,
    args: ['--start-maximized']
  });

  try {
    const page = await browser.newPage();
    
    console.log('1. Logging in...');
    await page.goto('http://localhost:3002/login', { waitUntil: 'networkidle0' });
    
    await page.type('input[type="email"]', 'test@cobytes.com');
    await page.type('input[type="password"]', 'test123');
    await page.click('button[type="submit"]');
    
    await page.waitForNavigation({ waitUntil: 'networkidle0' });
    console.log('✅ Logged in');

    console.log('2. Going to scans page...');
    await page.goto('http://localhost:3002/scans', { waitUntil: 'networkidle0' });
    await page.screenshot({ path: 'test-scans-page.png' });

    console.log('3. Clicking PentestTools Scans tab...');
    const pentestTab = await page.evaluateHandle(() => {
      const tabs = [...document.querySelectorAll('[role="tab"]')];
      return tabs.find(tab => tab.textContent.includes('PentestTools'));
    });
    
    if (pentestTab) {
      await pentestTab.click();
      await new Promise(resolve => setTimeout(resolve, 1000));
      console.log('✅ Clicked PentestTools tab');
      await page.screenshot({ path: 'test-pentest-tab.png' });
    } else {
      console.log('❌ PentestTools tab not found');
      return;
    }

    console.log('4. Looking for Browse Scanners button...');
    const browseButton = await page.evaluateHandle(() => {
      const buttons = [...document.querySelectorAll('button')];
      return buttons.find(btn => btn.textContent.includes('Browse PentestTools Scanners'));
    });
    
    if (browseButton) {
      console.log('✅ Found Browse Scanners button');
      await browseButton.click();
      await page.waitForNavigation({ waitUntil: 'networkidle0' });
      
      const currentUrl = page.url();
      console.log('Current URL after click:', currentUrl);
      
      if (currentUrl.includes('/404')) {
        console.log('❌ Got 404 error');
        await page.screenshot({ path: 'test-browse-scanners-404.png' });
      } else if (currentUrl.includes('/all-scanners')) {
        console.log('✅ Successfully navigated to all-scanners page');
        await page.screenshot({ path: 'test-browse-scanners-success.png' });
      } else {
        console.log(`⚠️ Unexpected redirect to: ${currentUrl}`);
        await page.screenshot({ path: 'test-browse-scanners-unexpected.png' });
      }
    } else {
      console.log('❌ Browse Scanners button not found');
    }

    await new Promise(resolve => setTimeout(resolve, 3000));

  } catch (error) {
    console.error('Test failed:', error.message);
    await page.screenshot({ path: 'test-error.png' });
  } finally {
    await browser.close();
  }
}

testPentestScannersButton().catch(console.error);